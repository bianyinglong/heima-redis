local voucherId = ARGV[1]local userId = ARGV[2]local orderId = ARGV[3]-- 数据keylocal stockKey = 'seckill:stock:' .. voucherIdlocal orderKey = 'seckill:order:' .. voucherId-- 判断库存是否充足if(tonumber(redis.call('get', stockKey)) <= 0) then    return 1end-- 判断用户是否重复下单(判断用户id是否在orderKey的set集合中)  sismember orderKey userIdif(redis.call('sismember',orderKey, userId) == 1) then    return 2end-- 减去库存redis.call('incrby', stockKey, -1)-- 下单，保存用户到orderKey对应的set集合中redis.call('sadd', orderKey, userId);-- XGROUP CREATE  key groupName ID [MKSTREAM]-- xgroup create stream.orders g1 0 MKSTREAM-- redis.call('XGROUP CREATE', 'stream.orders', 'g1', 0, MKSTREAM)-- 发送消息到消息队列, 将来从队列中取出数据存储到数据库中redis.call('xadd', 'stream.orders', '*', 'userId', userId, 'voucherId',voucherId, 'id', orderId)return 0